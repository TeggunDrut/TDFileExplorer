function randomNum(min,max){return Math.random()*(max-min)+min}function random(arr){return arr[Math.floor(Math.random()*arr.length)]}class Matrix{constructor(rows,cols){this.rows=rows,this.cols=cols,this.data=Array(this.rows).fill().map(()=>Array(this.cols).fill(0))}copy(){let m=new Matrix(this.rows,this.cols);for(let i=0;i<this.rows;i++)for(let j=0;j<this.cols;j++)m.data[i][j]=this.data[i][j];return m}static fromArray(arr){return new Matrix(arr.length,1).map((e,i)=>arr[i])}static subtract(a,b){return a.rows!==b.rows||a.cols!==b.cols?(console.log(a.rows,a.cols,b.rows,b.cols),void console.log("Columns and Rows of A must match Columns and Rows of B.")):new Matrix(a.rows,a.cols).map((_,i,j)=>a.data[i][j]-b.data[i][j])}toArray(){let arr=[];for(let i=0;i<this.rows;i++)for(let j=0;j<this.cols;j++)arr.push(this.data[i][j]);return arr}randomize(){return this.map(e=>2*Math.random()-1)}add(n){return n instanceof Matrix?this.rows!==n.rows||this.cols!==n.cols?void console.log("Columns and Rows of A must match Columns and Rows of B."):this.map((e,i,j)=>e+n.data[i][j]):this.map(e=>e+n)}static transpose(matrix){return new Matrix(matrix.cols,matrix.rows).map((_,i,j)=>matrix.data[j][i])}static multiply(a,b){if(a.cols===b.rows)return new Matrix(a.rows,b.cols).map((e,i,j)=>{let sum=0;for(let k=0;k<a.cols;k++)sum+=a.data[i][k]*b.data[k][j];return sum});console.log("Columns of A must match rows of B.")}multiply(n){return n instanceof Matrix?this.rows!==n.rows||this.cols!==n.cols?void console.log("Columns and Rows of A must match Columns and Rows of B."):this.map((e,i,j)=>e*n.data[i][j]):this.map(e=>e*n)}map(func){for(let i=0;i<this.rows;i++)for(let j=0;j<this.cols;j++){let val=this.data[i][j];this.data[i][j]=func(val,i,j)}return this}static map(matrix,func){return new Matrix(matrix.rows,matrix.cols).map((e,i,j)=>func(matrix.data[i][j],i,j))}print(){return console.table(this.data),this}serialize(){return JSON.stringify(this)}static deserialize(data){"string"==typeof data&&(data=JSON.parse(data));let matrix=new Matrix(data.rows,data.cols);return matrix.data=data.data,matrix}}"undefined"!=typeof module&&(module.exports=Matrix);